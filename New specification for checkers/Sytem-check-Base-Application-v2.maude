--- The monitor of an object may have the same name of the object
--- load Multi-step-atack.maude
load Temporal-logic-Base-application-v2.maude
view TL from TRIV to LTL is
  sort Elt to Ltl .
endv
mod SYSTEM-CHECK is
  pr NAT . pr LTL . pr LIST{TL} .
  inc CONFIGURATION .  pr CONVERSION .
  subsort Nat < Oid .
  --- pr MULTI-STEP-ATACK .
  op checker        :                          -> Cid         [format (r! o)]  .
  op Formula:_      : Ltl                      -> Attribute  .
  op end-c:_        : Nat                      -> Attribute  .
  op count:_        : Nat                      -> Attribute  .
  op finishc:_       : Bool                     -> Attribute  .
  op init-checker   : Nat Ltl Nat              -> Object     .
  op interpreter    : Ltl                      -> Ltl      .
  op check          : Nat Configuration        -> Configuration   .
  ---
  ---
  var Con : Configuration . var ATS : AttributeSet . vars RC N T END : Nat .
  var PR : Pred .  vars TL  TL' : Ltl . var BO : Bool .
  ---
  eq init-checker(RC,TL,END) = < RC : checker | Formula: TL, finishc: false , count: 0 , end-c: END > .
  ---
  eq interpreter(nil) = nil .
  eq interpreter(heredity(TL,TL')) = TL .
  eq interpreter(TL) = TL .
  ---
  eq check(RC,none) = none .
  ceq check(RC, < RC : checker | Formula: TL , finishc: false, count: N , end-c: END >  Con)
     =  < RC : checker | Formula: verification(TL,Con) , finishc: false, count: s(N), end-c: END  >  Con
     if  N <= END
     .
  eq check(RC,Con) = Con [owise] .



endm

--- rew {
--- < 0 : Producer | cnt-prod: 0,frequency: 1,clock-p: (0 0 0 0 0 0),weights: 2,end: 8,finishc: false,Notice-logs: nil >
--- < 1 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 70,clock-c: (0 0 0 0 0 0) >
--- < 2 : Producer | cnt-prod: 0,frequency: 2,clock-p: (0 0 0 0 0 0),weights: 3,end: 5,finishc: false,Notice-logs: nil >
--- < 3 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 20,clock-c: (0 0 0 0 0 0) >
--- < 4 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 10,clock-c: (0 0 0 0 0 0) >
--- < 5 : Producer | cnt-prod: 0,frequency: 1,clock-p: (0 0 0 0 0 0),weights: 1,end: 7,finishc: false,Notice-logs: nil >
--- < 0 : checker | count: 0, end-c: 1000, Formula: ([] (4 Causality 2)), finishc: false >
--- --- < 5051 : Market | Requets: nil >
--- --- < 8030 : Server | Devices: 1,RC Causality SEHIPS: false,NIPS: false >
--- --- < 8050 : Server | Devices: 1,HIPS: false,NIPS: false >
--- --- < 0 : checker | count: 0, end-c: 1000, Formula: ( [](Acces-market-D(0))->( (E App-download-D(0)) -> (  (E Payload-D(1)) -> ( ( (E Scanning-D(1)) -> ( ~ E Injection-D(1) ) )  )   )   )     ) , finishc: false  >
--- }
--- .
---
--- search  {
--- < 0 : Producer | cnt-prod: 0,frequency: 1,clock-p: (0 0 0 0 0 0 0 0 0 0),weights: 7,end: 8,finishc: false,Notice-logs: nil >
--- < 1 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 70,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- --- < 2 : Producer | cnt-prod: 0,frequency: 2,clock-p: (0 0 0 0 0 0 0 0 0 0),weights: 10,end: 7,finishc: false,Notice-logs: nil >
--- --- < 3 : Consumer | current-mesg: none,freq-C: 2,actual-time: 0,logs: nil,limit: 70,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- --- < 4 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 20,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- --- < 5 : Producer | cnt-prod: 0,frequency: 2,clock-p: (0 0 0 0 0 0 0 0 0 0),weights: 10,end: 7,finishc: false,Notice-logs: nil >
--- --- < 6 : Consumer | current-mesg: none,freq-C: 2,actual-time: 0,logs: nil,limit: 70,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- --- < 7 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 20,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- --- < 8 : Producer | cnt-prod: 0,frequency: 1,clock-p: (0 0 0 0 0 0 0 0 0 0),weights: 7,end: 8,finishc: false,Notice-logs: nil >
--- --- < 9 : Consumer | current-mesg: none,freq-C: 1,actual-time: 0,logs: nil,limit: 70,clock-c: (0 0 0 0 0 0 0 0 0 0) >
--- < 5051 : Market | Requets: nil >
--- < 8030 : Server | Devices: 1,HIPS: false,NIPS: false >
--- < 8050 : Server | Devices: 1,HIPS: false,NIPS: false >
--- < 0 : checker | count: 0, end-c: 1000, Formula: ( [](Acces-market-D(0))->( (E App-download-D(0)) -> (  (E Payload-D(1)) -> ( ( (E Scanning-D(1)) -> ( ~ E Injection-D(1) ) )  )   )   )     ) , finishc: false  >
--- }
--- =>*
---
--- {Con < 0 : checker | ATS , Formula: ( [](Acces-market-D(0))->( (E App-download-D(0)) -> (  (E Payload-D(1)) -> ( ( (E Scanning-D(1)) -> ( ~ E Injection-D(1) ) )  )   )   )     ) , finishc: true  >
--- }




eof
