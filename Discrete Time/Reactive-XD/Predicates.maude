mod PREDICATES is
  pr STRING . pr RULES  .  including LTL .
  op _|-_           : Sys  Ltl  -> Ltl .
  op partial-order  : Nat       -> Pred .
  op _Causality_    : Nat Nat   -> Pred .
  op Order_         : Nat       -> Pred .
  op Order_of_         : Nat Nat   -> Pred .

  vars N M K T T' R R' RC SE CS : Nat .
  vars LP LP' LP'' : List{4Tuple} .
  vars LC LC' LC'' : List{3Tuple} .
  vars LT LT' LT'' : Ltl .
  var Con : Configuration . 
  var ATS : AttributeSet .
  var VC : Vector .
  var PR : Pred .
  var BO : Bool .

  eq verification(PR,Con) = {Con} |- PR .

  --- Causality detection over Consumers
  ceq { < RC : Consumer | ATS , clock-c: VC > Con } |- (RC Causality SE) = true
    if ic(VC,SE) > 0 .
  eq { Con } |- (RC Causality SE) = false
    [owise] .
  ---
  ceq { < SE : Producer | ATS , Notice-logs:( LP | N ; T ; CS ; R | LP' | M ; T' ; CS ; R' | LP'') > Con } |- (Order SE of CS) = true
    if N > M .
  ceq { < CS : Consumer | ATS , logs:( LC | SE ; N ; K | LC' | SE ; M ; T | LC'') > Con } |- (Order CS of SE ) = true
    if N > M  .
  eq { Con } |- (Order CS of SE ) = false   [owise] .
  ---
  ceq { < SE : Producer | ATS , Notice-logs:( LP | N ; T ; K ; R | LP' | M ; T' ; K ; R' | LP'') > Con } |- (Order SE) = true
    if (N < M /\ R' < R /\ T < T') .
  eq { Con } |- (Order SE) = false   [owise] .


endm
